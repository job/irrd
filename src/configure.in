dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.13)
AC_INIT(../NOTES)
AC_CONFIG_SRCDIR([lib/mrt/mrt.c])

VERSION=`sed -n 's/.*IRRD_VERSION.*"\(.*\)".*/\1/p' $srcdir/include/version.h|cut -d ' ' -f1`

dnl VERSION needs to be updated in include/version.h such that 'make dist'
dnl uses the correct filename for the directory name and tarball and binaries
dnl get the right version numbers.
AM_INIT_AUTOMAKE("irrd", $VERSION)

AM_MAINTAINER_MODE()

top_srcdir=`(cd $srcdir; pwd)`
dnl what OS are we?
AC_CANONICAL_HOST

# make sure MAKE sets ${MAKE}
AC_PATH_PROG(MAKE,gmake,no)
if test $MAKE = no; then
    unset ac_cv_path_MAKE
    AC_PATH_PROG(MAKE,make,no)
    if test $MAKE = no; then
	AC_MSG_ERROR([can't locate a make.])
	exit 1
    fi
fi
AC_PROG_MAKE_SET()

dnl defining FUNCPROTO ensures that struct library uses prototype
dnl we don't expect non-ANSI (K&R) C compilers to be used
dnl Some compiles may define __STDC__ by itself which makes it enable,
dnl but struct library also requires its values is non-zero
dnl XXX this could use $srcdir, if the makefiles used automake
CPPFLAGS="-DFUNCPROTO -I${top_srcdir}/include"

dnl XXX
dnl use ranlib, not libtool
AC_PROG_RANLIB
dnl AC_DISABLE_SHARED()
dnl AC_LIBTOOL_DLOPEN()
dnl AC_PROG_LIBTOOL()

# compiler specifics
AC_PROG_CC
dnl AM_C_PROTOTYPES XXX no automake yet
AC_PROG_CPP
AC_C_CONST

case "${host_os}" in
    *solaris* )
dnl	XPG4 support shouldn't be necessary -ljb
dnl	AC_MSG_CHECKING(for Solaris XPG4 support)
dnl	if test -f /usr/lib/libxnet.so; then
dnl	    CPPFLAGS="$CPPFLAGS -D_POSIX_C_SOURCE=199506 -D_XOPEN_SOURCE=500"
dnl	    CPPFLAGS="$CPPFLAGS -D_XOPEN_SOURCE_EXTENDED=1 -D_XOPEN_VERSION=4"
dnl	    CPPFLAGS="$CPPFLAGS -D__EXTENSIONS__ -D_VA_LIST"
dnl	    LIBS="$LIBS -lxnet /usr/ccs/lib/values-xpg4.o"
dnl  	    AC_MSG_RESULT(yes)
dnl	else
dnl  	    AC_MSG_RESULT(no)
dnl	fi
	if test "$CC" = "gcc"; then
	    CFLAGS="$CFLAGS -Wno-char-subscripts"
	fi
    ;;
esac

AC_ARG_ENABLE(wall,
[  --disable-wall          disable -Wall option always],
[disable_wall=yes],)
AC_ARG_ENABLE(wall,
[
AS_HELP_STRING([--enable-wall], [enable -Wall])],
[ case "$enable_wall" in
  no)
    ;;
  *)
    enable_wall="yes"
    ;;
  esac ],
[ # ie: no --{enable,disable}-wall option, withval == ""
    enable_wall="yes"
])      
if test "$enable_wall" = "yes"; then
    case "${CC}" in
    *gcc* )
	dnl "-pedantic" was too strict to run on netbsd and linux
	dnl   CFLAGS="$CFLAGS -pedantic -Wall"
	CFLAGS="$CFLAGS -Wall"
	;;
    * )
	case "${host_os}" in
	*solaris* )
	    # supress warnings from sunStudio/sunCC/Sun WorkShop
	    # XXX its complaining for a reason...usually
	    CFLAGS="$CFLAGS -w"
	    ;;
	esac
	;;
    esac
fi
QUANTIFY="quantify"
PURIFY="purify"

# platform specifics
AC_WORDS_BIGENDIAN
AC_LONG_64_BITS

# Check for pthreads
AH_TEMPLATE([HAVE_PTHREADS], [define this if you have pthreads])
# XXX use of HAVE_LIBPTHREAD in the code is wrong, since some systems have
#	pthread support bit no libpthread
AH_TEMPLATE([HAVE_LIBPTHREAD], [define this if you have libpthread])
AC_MSG_CHECKING([whether to use pthreads])
case "${host_os}" in
    # I've seen a report that pthread support is shaky in FreeBSD 2.x releases
    freebsd2*|freebsd4*)
	enable_thread=no
    ;;
    netbsdelf5.*)
	enable_thread=yes
    ;;
    solaris*|linux*|freebsd* )
	enable_thread=yes
    ;;
esac
AC_ARG_ENABLE(thread,
[
AS_HELP_STRING([--enable-thread], [enable threads])],
[ case "$enable_thread" in
  no)
    AC_MSG_RESULT(no)
    ;;
  *)
    AC_MSG_RESULT(yes)
    enable_thread="yes"

    AC_CHECK_HEADERS([pthread.h], [AC_DEFINE(HAVE_PTHREADS)
		have_pthreads=1])
    # FreeBSD 4 does not have libpthread
    AC_CHECK_LIB(pthread, main, [AC_DEFINE(HAVE_LIBPTHREAD)
		have_pthreads=1])
    case "${host_os}" in
    freebsd*|netbsd*|openbsd* )
	LDFLAGS="-pthread $LDFLAGS"
        CFLAGS="-D_THREAD_SAFE -pthread $CFLAGS"
	;;
    *solaris* )
	case "${CC}" in
	*gcc* )
	    LDFLAGS="-pthreads $LDFLAGS"
            CFLAGS="-D_REENTRANT $CFLAGS"
	    ;;
	* )
	    LDFLAGS="-mt -lpthread $LDFLAGS"
            CFLAGS="-D_REENTRANT -mt $CFLAGS"
	    ;;
	esac
        CFLAGS="-D_POSIX_PTHREAD_SEMANTICS $CFLAGS"
	;;
    osf* )
	if test $CC = "cc" ; then
           CPPFLAGS="$CPPFLAGS -taso -pthread"
	fi
	LDFLAGS="$LDFLAGS -lc_r"
	CFLAGS="-D_THREAD_SAFE $CFLAGS"
	;;
    esac
    ;;
  esac ],
[   # ie: no --{enable,disable}-thread option, withval == ""
    AC_MSG_RESULT(no) 
    enable_thread="no"
])      
if test "$have_pthreads" = "yes"; then
    QUANTIFY="$QUANTIFY -threads=yes -max-threads=80"
    PURIFY="$PURIFY -threads=yes -max-threads=80"
    # at least FreeBSD 3.1 doesn't have this
    AC_CHECK_FUNCS(pthread_attr_setscope)
    # XXX s.b. pthread_setconcurrency?
    AC_CHECK_FUNCS(thr_setconcurrency)
fi

# dmalloc
OLDLIBS=$LIBS
AM_WITH_DMALLOC()
AH_TEMPLATE(DMALLOC, [define this for dmalloc])
if test "${with_dmalloc+set}" = set; then
    AC_DEFINE(DMALLOC)
    if test "X${withval}" != "X"; then
	LIBS="-L${withval}/lib"
    fi
    if test "$enable_thread" = "yes"; then
	AC_CHECK_LIB([libdmallocth],[main],[
	    LIBS="-L${withval}/lib -ldmallocth"],[
	    AC_MSG_ERROR([Could not find libdmallocth])])
    else
	AC_CHECK_LIB([libdmalloc],[main],[
	    LIBS="-L${withval}/lib -ldmalloc"],[
	    AC_MSG_ERROR([Could not find libdmallocth])])
    fi
    LIBS="$OLDLIBS -L${withval}/lib -ldmalloc"
else
    LIBS=$OLDLIBS
fi

# Header file checks
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS([libgen.h signal.h string.h stdlib.h strings.h sys/stropts.h \
	sys/select.h sys/time.h])

# Function checks
AC_FUNC_SETPGRP	
AC_FUNC_ALLOCA
AC_CHECK_FUNCS([basename dirname getdtablesize gethostbyaddr_r gethostbyname_r \
	localtime_r memmove mkdtemp mkstemp setsid sigaction sigprocmask \
	sigset snprintf strtok_r strerror])

# Type checks
AC_STRUCT_TM
AH_TEMPLATE(HAVE_U_TYPES, [define this if you have u_char, u_int, u_short, and u_long])
AC_MSG_CHECKING([u_char, u_int, u_short, and u_long])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>]], [[
  u_char c; u_int i; u_short s; u_long l;]])],
  [AC_DEFINE(HAVE_U_TYPES) AC_MSG_RESULT(yes)],
  [AC_MSG_RESULT(no)]);
# Do we have socklen_t definition?
AC_CHECK_TYPES([socklen_t], [], [], [#if HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#endif])

######### BEGIN OLD VERSION XXXXXXXXX
dnl set default of no support in case no support
dnl DESTDIR=/usr/local/sbin
dnl MANDIR=/usr/local/man
MODULES=""

EXTRA_INCLUDE_DIRS=""
EXTRA_LIBS=""

case "${host_os}" in
    solaris* )
	CRYPT_LIB="-lcrypt"
    ;;
    bsdi* )
        LIBS="$LIBS -lipc"
    ;;
    freebsd*|netbsd*|openbsd* )
	CRYPT_LIB="-lcrypt"
    ;;
    linux* )
	CRYPT_LIB="-lcrypt"
    ;;
    osf* )
        CPPFLAGS="$CPPFLAGS -L/usr/shlib"
    ;;
esac

AC_DEFUN(AC_FILE_EXIST, [
if test -f "$1" >/dev/null 2>&1; then
  ifelse([$2], , :, [$2])
  ifelse([$3], , , [else $3])
fi])

dnl Checks for programs.
dnl because it will be executed in program/*
ac_install_sh=../../$ac_install_sh
AC_PROG_INSTALL
AC_CHECK_PROGS(MAKEDEP, makedepend mkdep)
if test "$MAKEDEP" = "makedepend"; then
    MAKEDEPCLEAN="rm -f .depend"
fi
AC_SUBST(MAKEDEPCLEAN)

dnl Checks for various functions
AC_CHECK_FUNCS(gethostbyname)
if test x"$ac_cv_func_gethostbyname" = x"no"; then
AC_CHECK_LIB(nsl, gethostbyname)
fi

AC_CHECK_FUNCS(socket)
if test x"$ac_cv_func_socket" = x"no"; then
AC_CHECK_LIB(socket, socket)
fi

AC_CHECK_FUNCS(inet_ntop)
if test x"$ac_cv_func_inet_ntop" = x"no"; then
AC_CHECK_LIB(resolv, inet_ntop, [
  LIBS="$LIBS -lresolv"
  AC_DEFINE(HAVE_INET_NTOP)
  AC_CHECK_HEADERS(resolv.h)]
)
fi

dnl if test -d /usr/local/include; then
dnl     CPPFLAGS="$CPPFLAGS -I/usr/local/include"
dnl fi
dnl if test -d /usr/local/lib; then
dnl    LDFLAGS="$LDFLAGS -L/usr/local/lib"
dnl fi

dnl find flex
AC_PATH_PROG(FLEX_PATH,flex,no)
if test $FLEX_PATH = no; then
 AC_MSG_ERROR([flex is required -- see www.gnu.org/software/flex/])
fi

dnl find bison/yacc
AC_PROG_YACC
dnl AC_PATH_PROG(BISON_PATH,bison,no)
dnl if test $BISON_PATH = no; then
dnl    BISON_PATH=""
dnl    echo "** No BISON -- only IRRD will be built! **"
dnl fi

AC_SUBST(FLEX_PATH)

dnl sendmail mail and pgp
AC_PATH_PROG(SENDMAIL_PATH,sendmail,no,$PATH:/usr/lib)
if test $SENDMAIL_PATH = no; then
    SENDMAIL_PATH=""
else
    AC_DEFINE(HAVE_SENDMAIL)
fi
AC_PATH_PROG(MAIL_PATH,mail,no)
if test $MAIL_PATH = no; then
    MAIL_PATH=""
else
    AC_DEFINE(HAVE_MAIL)
fi

dnl Prefer GPG, second choice PGP version 5

AC_ARG_WITH(pgpv5,
[  --with-pgpv5            Prefer PGP version 5 over the default Gnu PGP (GPG)],
[ case "$withval" in
  no)
    ac_pgpv5=no
  ;;
  *)
    ac_pgpv5=yes
  ;;
  esac ],
[ac_pgpv5=undef]
)

if test $ac_pgpv5 != yes; then
	AC_PATH_PROG(GPG_PATH,gpg,no)
else
	GPG_PATH=no
fi

if test $GPG_PATH = no -o $ac_pgpv5 = yes; then
	if test $ac_pgpv5 = no; then
		PGPK_PATH=no
		PGPS_PATH=no
		PGPV_PATH=no
	else
		AC_PATH_PROG(PGPK_PATH,pgpk,no)
		AC_PATH_PROG(PGPS_PATH,pgps,no)
		AC_PATH_PROG(PGPV_PATH,pgpv,no)
	fi
	if test $PGPK_PATH = no -o $PGPS_PATH = no -o $PGPV_PATH = no; then
		PGPK_PATH=""
		PGPS_PATH=""
		PGPV_PATH=""
		GPG_PATH=""
		PGPDIR=gpg
	else	
		GPG_PATH=""
		PGPDIR=pgpv5
		AC_DEFINE(PGP)
	fi
else
	PGPK_PATH=""
	PGPS_PATH=""
	PGPV_PATH=""
	PGPDIR=gpg
	AC_DEFINE(PGP)
fi
AC_SUBST(PGP)
AC_SUBST(PGPDIR)
AC_SUBST(GPG_PATH)
AC_SUBST(PGPV_PATH)
AC_SUBST(PGPK_PATH)
AC_SUBST(PGPS_PATH)

AC_PATH_PROG(GZIP_PATH,gzip,no)
if test $GZIP_PATH = no; then
    GZIP_PATH=""
else
    AC_DEFINE(HAVE_GZIP)
fi
AC_PATH_PROG(IRRDCACHER_PATH,irrdcacher,no)
if test $IRRDCACHER_PATH = no; then
    IRRDCACHER_PATH=""
else
    AC_DEFINE(HAVE_IRRDCACHER)
fi
AC_PATH_PROG(WGET_PATH,wget,no)
if test $WGET_PATH = no; then
    WGET_PATH=""
else
    AC_DEFINE(HAVE_WGET)
fi
AC_SUBST(SENDMAIL_PATH)
AC_SUBST(MAIL_PATH)
AC_SUBST(GZIP_PATH)
AC_SUBST(IRRDCACHER_PATH)
AC_SUBST(WGET_PATH)

dnl Check for in6_addr structure definition
AC_EGREP_HEADER(struct in6_addr, netinet/in.h,
                  AC_DEFINE(HAVE_STRUCT_IN6_ADDR))

dnl Checks for library functions.

AC_CHECK_DECLS(utimes,,,[#include <sys/time.h>])
AC_CHECK_DECLS(inet_ntop,,,[#include <netinet/in.h>
#include <sys/types.h>
#include <arpa/inet.h>
#include <arpa/nameser.h>
#include <resolv.h>])

AC_SUBST(DB_LIB)
AC_SUBST(DESTDIR)
AC_SUBST(MANDIR)
AC_SUBST(MODULES)
AC_SUBST(IRRD_OPS_LIBS)

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(DEFINES)
AC_SUBST(EXTRA_INCLUDE_DIRS)
AC_SUBST(EXTRA_LIBS)
AC_SUBST(QUANTIFY)
AC_SUBST(PURIFY)

AC_SUBST(CRYPT_LIB)
AC_SUBST(THREADLIBS)
AC_CONFIG_FILES([Make.include:../src/Make.include.in ./include/pipeline_defs.h ./include/irr_defs.h])
######### END OLD VERSION XXXXXXXXX

AC_CONFIG_HEADERS(include/config.h)
# autoheader bits
AH_TOP([
#ifndef CONFIG_H
#define CONFIG_H	1
#if DMALLOC
# include <dmalloc.h>
#endif
])
AH_BOTTOM([
/* Define if you have struct in6_addr */
#undef HAVE_STRUCT_IN6_ADDR

#undef HAVE_MAIL

#undef HAVE_SENDMAIL

#undef PGP

#undef HAVE_GZIP

#undef HAVE_IRRDCACHER

#undef HAVE_WGET

#undef HAVE_LIBGEN

/* define LP64 */
#if LONG_64_BITS
# define LP64		1
#endif
#endif /* CONFIG_H */
])

AC_OUTPUT
